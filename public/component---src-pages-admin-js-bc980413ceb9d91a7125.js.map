{"version":3,"sources":["webpack:///./src/components/formComponents/ConfirmSignUp.js","webpack:///./src/graphql/mutations.js","webpack:///./src/components/formComponents/AddInventory.js","webpack:///./src/graphql/queries.js","webpack:///./src/templates/ViewInventory.js","webpack:///./src/templates/Inventory.js","webpack:///./src/pages/admin.js"],"names":["ConfirmSignUp","state","username","authcode","onChange","e","setState","target","name","value","render","className","htmlFor","this","id","type","placeholder","onClick","props","confirmSignUp","href","React","Component","createProduct","updateProduct","deleteProduct","initialState","brand","price","categories","image","description","currentInventory","maxInventory","intro","sold","AddInventory","clearForm","onImageChange","a","file","files","fileName","uuid","Storage","put","addItem","length","item","replace","split","API","graphql","graphqlOperation","input","listProducts","ViewInventory","inventory","currentItem","editingIndex","fetchInventory","inventoryData","items","data","console","log","editItem","index","saveItem","deleteItem","slice","event","componentDidMount","map","key","to","slugify","Image","src","alt","numberFormat","Inventory","viewState","toggleViewState","signOut","Admin","formState","isAdmin","toggleFormState","signUp","form","email","password","Auth","attributes","signIn","currentAuthenticatedUser","user","payload","signInUserSession","idToken","includes","SignUp","SignIn","renderForm"],"mappings":"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","file":"component---src-pages-admin-js-bc980413ceb9d91a7125.js","sourcesContent":["import React from \"react\"\n\nclass ConfirmSignUp extends React.Component {\n  state = {\n    username: \"\",\n    authcode: \"\",\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    return (\n      <div>\n        <h3>Sign Up</h3>\n        <div className=\"flex flex-1 justify-center\">\n          <div className=\"w-full max-w-144\">\n            <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"username\"\n                >\n                  Username\n                </label>\n                <input\n                  onChange={this.onChange}\n                  name=\"username\"\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"username\"\n                  type=\"text\"\n                  placeholder=\"Username\"\n                />\n              </div>\n              <div className=\"mb-6\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"authcode\"\n                >\n                  Authentication Code\n                </label>\n                <input\n                  onChange={this.onChange}\n                  name=\"authcode\"\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"authcode\"\n                  type=\"authcode\"\n                />\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <button\n                  onClick={() => this.props.confirmSignUp(this.state)}\n                  className=\"bg-secondary hover:bg-primary text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                  type=\"button\"\n                >\n                  Confirm Sign Up\n                </button>\n                <a\n                  className=\"inline-block align-baseline font-bold text-sm\"\n                  href=\"#/\"\n                >\n                  Forgot Password?\n                </a>\n              </div>\n            </form>\n            <p className=\"text-center text-gray-500 text-xs\">\n              &copy;2020 JAMstack ECommerce. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ConfirmSignUp\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createProduct = /* GraphQL */ `\n  mutation CreateProduct(\n    $input: CreateProductInput!\n    $condition: ModelProductConditionInput\n  ) {\n    createProduct(input: $input, condition: $condition) {\n      id\n      categories\n      price\n      name\n      image\n      description\n      currentInventory\n      maxInventory\n      brand\n      intro\n      sold\n      endDate\n      question\n      options\n      answer\n      gallery\n    }\n  }\n`;\nexport const updateProduct = /* GraphQL */ `\n  mutation UpdateProduct(\n    $input: UpdateProductInput!\n    $condition: ModelProductConditionInput\n  ) {\n    updateProduct(input: $input, condition: $condition) {\n      id\n      categories\n      price\n      name\n      image\n      description\n      currentInventory\n      maxInventory\n      brand\n      intro\n      sold\n      endDate\n      question\n      options\n      answer\n      gallery\n    }\n  }\n`;\nexport const deleteProduct = /* GraphQL */ `\n  mutation DeleteProduct(\n    $input: DeleteProductInput!\n    $condition: ModelProductConditionInput\n  ) {\n    deleteProduct(input: $input, condition: $condition) {\n      id\n      categories\n      price\n      name\n      image\n      description\n      currentInventory\n      maxInventory\n      brand\n      intro\n      sold\n      endDate\n      question\n      options\n      answer\n      gallery\n    }\n  }\n`;\n","import React from \"react\"\nimport { Storage, API, graphqlOperation } from \"aws-amplify\"\nimport { createProduct } from \"../../graphql/mutations\"\nimport uuid from \"uuid/v4\"\n\nconst initialState = {\n  name: \"\",\n  brand: \"\",\n  price: \"\",\n  categories: [],\n  image: \"\",\n  description: \"\",\n  currentInventory: \"\",\n  maxInventory: \"\",\n  intro: \"\",\n  sold: false,\n}\n\nclass AddInventory extends React.Component {\n  state = initialState\n  clearForm = () => {\n    this.setState(() => initialState)\n  }\n  onImageChange = async e => {\n    const file = e.target.files[0]\n    const fileName = uuid() + file.name\n    // save the image in S3 when it's uploaded\n    await Storage.put(fileName, file)\n    this.setState({ image: fileName })\n  }\n  addItem = async () => {\n    const {\n      name,\n      brand,\n      price,\n      categories,\n      image,\n      description,\n      currentInventory,\n      maxInventory,\n      intro,\n      sold,\n    } = this.state\n    if (\n      !name ||\n      !brand ||\n      !price ||\n      !categories.length ||\n      !description ||\n      !currentInventory ||\n      !image ||\n      !maxInventory ||\n      !intro ||\n      !sold\n    )\n      return\n\n    // create the item in the database\n    const item = {\n      ...this.state,\n      categories: categories.replace(/\\s/g, \"\").split(\",\"),\n    }\n    await API.graphql(graphqlOperation(createProduct, { input: item }))\n    this.clearForm()\n  }\n  render() {\n    const {\n      name,\n      brand,\n      price,\n      categories,\n      intro,\n      description,\n      currentInventory,\n      sold,\n      maxInventory,\n    } = this.state\n    return (\n      <div>\n        <h3>Add Item</h3>\n        <div className=\"flex flex-1 justify-center\">\n          <div className=\"w-full max-w-144\">\n            <form className=\"bg-white shadow-xs rounded px-8 pt-6 pb-8 mb-4\">\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"name\"\n                >\n                  Item name\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={name}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"name\"\n                  type=\"text\"\n                  placeholder=\"Item name\"\n                  name=\"name\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"price\"\n                >\n                  Item price\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={price}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"price\"\n                  type=\"text\"\n                  placeholder=\"Item price\"\n                  name=\"price\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"description\"\n                >\n                  Item Description\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={description}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"description\"\n                  placeholder=\"Item Description\"\n                  name=\"description\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"item image\"\n                >\n                  Item image\n                </label>\n                <input type=\"file\" onChange={e => this.onImageChange(e)} />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"currentInventory\"\n                >\n                  In stock\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={currentInventory}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"currentInventory\"\n                  placeholder=\"Items in stock\"\n                  name=\"currentInventory\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"maxInventory\"\n                >\n                  Max Inventory\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={maxInventory}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"maxInventory\"\n                  placeholder=\"Items max inventory\"\n                  name=\"maxInventory\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"categories\"\n                >\n                  Item categories\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={categories}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"categories\"\n                  placeholder=\"Comma separated list of item categories\"\n                  name=\"categories\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"brand\"\n                >\n                  Item brand\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={brand}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"brand\"\n                  placeholder=\"Item brand\"\n                  name=\"brand\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"intro\"\n                >\n                  Item intro\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={intro}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"intro\"\n                  placeholder=\"Item intro\"\n                  name=\"intro\"\n                />\n              </div>\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"sold\"\n                >\n                  Item sold\n                </label>\n                <input\n                  onChange={this.onChange}\n                  value={sold}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"sold\"\n                  placeholder=\"Item sold\"\n                  name=\"sold\"\n                />\n              </div>\n              <div className=\"flex items-center justify-between mt-4\">\n                <button\n                  onClick={this.addItem}\n                  className=\"bg-secondary hover:bg-black text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                  type=\"button\"\n                >\n                  Add Item\n                </button>\n                <a\n                  onClick={this.clearForm}\n                  className=\"inline-block align-baseline font-bold text-sm\"\n                  href=\"#/\"\n                >\n                  Clear Form\n                </a>\n              </div>\n            </form>\n            <p className=\"text-center text-gray-500 text-xs\">\n              &copy;2020 JAMstack ECommerce. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddInventory\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getProduct = /* GraphQL */ `\n  query GetProduct($id: ID!) {\n    getProduct(id: $id) {\n      id\n      categories\n      price\n      name\n      image\n      description\n      currentInventory\n      maxInventory\n      brand\n      intro\n      sold\n      endDate\n      question\n      options\n      answer\n      gallery\n    }\n  }\n`;\nexport const listProducts = /* GraphQL */ `\n  query ListProducts(\n    $filter: ModelProductFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listProducts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        categories\n        price\n        name\n        image\n        description\n        currentInventory\n        maxInventory\n        brand\n        intro\n        sold\n        endDate\n        question\n        options\n        answer\n        gallery\n      }\n      nextToken\n    }\n  }\n`;\n","import React from \"react\"\nimport { API, graphqlOperation } from \"aws-amplify\"\nimport { listProducts } from \"../graphql/queries\"\nimport Image from \"../components/Image\"\nimport { Link } from \"gatsby\"\nimport { slugify, numberFormat } from \"../../utils/helpers\"\nimport { FaTimes } from \"react-icons/fa\"\nimport { updateProduct, deleteProduct } from \"../graphql/mutations\"\n\nclass ViewInventory extends React.Component {\n  state = {\n    inventory: [],\n    currentItem: {},\n    editingIndex: [],\n  }\n  componentDidMount() {\n    this.fetchInventory()\n  }\n  fetchInventory = async () => {\n    const inventoryData = await API.graphql(graphqlOperation(listProducts))\n    const { items } = inventoryData.data.listProducts\n    console.log(\"inventory items: \", items)\n    this.setState({ inventory: items })\n  }\n  editItem = (item, index) => {\n    const editingIndex = index\n    this.setState({ editingIndex, currentItem: item })\n  }\n  saveItem = async index => {\n    const inventory = [...this.state.inventory]\n    inventory[index] = this.state.currentItem\n    await API.graphql(\n      graphqlOperation(updateProduct, { input: this.state.currentItem })\n    )\n    this.setState({ editingIndex: null, inventory })\n  }\n\n  deleteItem = async index => {\n    const id = this.state.inventory[index].id\n    const inventory = [\n      ...this.state.inventory.slice(0, index),\n      ...this.state.inventory.slice(index + 1),\n    ]\n    this.setState({ inventory })\n    await API.graphql(graphqlOperation(deleteProduct, { input: { id } }))\n  }\n  onChange = event => {\n    const currentItem = {\n      ...this.state.currentItem,\n      [event.target.name]: event.target.value,\n    }\n\n    this.setState({ currentItem })\n  }\n  render() {\n    const { inventory, currentItem, editingIndex } = this.state\n    console.log(\"currentItem: \", currentItem)\n    return (\n      <div className=\"mobile:px-10 px-4 pb-10 flex justify-center main-content\">\n        <div className=\"w-fw\">\n          <div>\n            <h2>Inventory</h2>\n            {inventory.map((item, index) => {\n              const isEditing = editingIndex === index\n              if (isEditing) {\n                return (\n                  <div className=\"border-b py-10\" key={item.id}>\n                    <div className=\"flex items-center\">\n                      <Link to={slugify(item.name)}>\n                        <Image\n                          className=\"w-32 m-0\"\n                          src={item.image}\n                          alt={item.name}\n                        />\n                      </Link>\n                      <input\n                        onChange={e => this.onChange(e, index)}\n                        className=\"ml-8 shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        value={currentItem.name}\n                        placeholder=\"Item name\"\n                        name=\"name\"\n                      />\n                      <div className=\"flex flex-1 justify-end items-center\">\n                        <p className=\"m-0 text-sm mr-2\">In stock:</p>\n                        <input\n                          onChange={this.onChange}\n                          className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                          value={currentItem.currentInventory}\n                          name=\"currentInventory\"\n                          placeholder=\"Item inventory\"\n                        />\n                        <input\n                          onChange={this.onChange}\n                          className=\"ml-16 shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                          value={currentItem.price}\n                          name=\"price\"\n                          placeholder=\"Item price\"\n                        />\n                      </div>\n                      <button\n                        onClick={() => this.saveItem(index)}\n                        className=\"m-0 ml-10 text-gray-900 text-s cursor-pointer\"\n                      >\n                        <span className=\"text-sm ml-10 m-0\">Save</span>\n                      </button>\n                    </div>\n                  </div>\n                )\n              }\n              return (\n                <div className=\"border-b py-10\" key={item.id}>\n                  <div className=\"flex items-center\">\n                    <Link to={slugify(item.name)}>\n                      <Image\n                        className=\"w-32 m-0\"\n                        src={item.image}\n                        alt={item.name}\n                      />\n                    </Link>\n                    <Link to={slugify(item.name)}>\n                      <p className=\"m-0 pl-10 text-gray-600 text-sm\">\n                        {item.name}\n                      </p>\n                    </Link>\n                    <div className=\"flex flex-1 justify-end\">\n                      <p className=\"m-0 pl-10 text-gray-900 tracking-tighter text-sm\">\n                        In stock: {item.currentInventory}\n                      </p>\n                      <p className=\"m-0 pl-20 text-gray-900 tracking-tighter font-semibold\">\n                        {numberFormat(item.price)}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center m-0 ml-10 text-gray-900 text-s cursor-pointer\">\n                      <FaTimes onClick={() => this.deleteItem(index)} />\n                      <button\n                        onClick={() => this.editItem(item, index)}\n                        className=\"text-sm ml-10 m-0\"\n                      >\n                        Edit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ViewInventory\n","import React from \"react\"\nimport AddInventory from \"../components/formComponents/AddInventory\"\nimport ViewInventory from \"./ViewInventory\"\n\nclass Inventory extends React.Component {\n  state = {\n    viewState: \"view\",\n  }\n  toggleViewState(viewState) {\n    this.setState(() => ({ viewState }))\n  }\n  render() {\n    return (\n      <div className=\"mobile:px-10 px-4 pb-10 flex justify-center main-content\">\n        <div className=\"w-fw\">\n          <div>\n            <h3>Inventory</h3>\n            <div className=\"flex\">\n              <button\n                className=\"mr-4 cursor-pointer hover:text-secondary\"\n                onClick={() => this.toggleViewState(\"view\")}\n              >\n                View\n              </button>\n              <button\n                className=\"cursor-pointer hover:text-secondary\"\n                onClick={() => this.toggleViewState(\"add\")}\n              >\n                Add\n              </button>\n            </div>\n            {this.state.viewState === \"view\" ? (\n              <ViewInventory />\n            ) : (\n              <AddInventory />\n            )}\n            <button\n              onClick={this.props.signOut}\n              className=\"bg-secondary hover:bg-black text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              type=\"button\"\n            >\n              Sign Out\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Inventory\n","import React from \"react\"\nimport { Auth } from \"aws-amplify\"\nimport SignUp from \"../components/formComponents/SignUp\"\nimport ConfirmSignUp from \"../components/formComponents/ConfirmSignUp\"\nimport SignIn from \"../components/formComponents/SignIn\"\nimport Inventory from \"../templates/Inventory\"\n\nclass Admin extends React.Component {\n  state = { formState: \"signUp\", isAdmin: false }\n  toggleFormState = formState => {\n    this.setState(() => ({ formState }))\n  }\n  async componentDidMount() {\n    const user = await Auth.currentAuthenticatedUser()\n    const {\n      signInUserSession: {\n        idToken: { payload },\n      },\n    } = user\n    if (\n      payload[\"cognito:groups\"] &&\n      payload[\"cognito:groups\"].includes(\"Admin\")\n    ) {\n      this.setState({ formState: \"signedIn\", isAdmin: true })\n    }\n  }\n  signUp = async form => {\n    const { username, email, password } = form\n    // step 1: Sign up a new user\n    await Auth.signUp({\n      username,\n      password,\n      attributes: { email },\n    })\n    this.setState({ formState: \"confirmSignUp\" })\n  }\n  confirmSignUp = async form => {\n    const { username, authcode } = form\n    // step 2: Use MFA to confirm the new user\n    await Auth.confirmSignUp(username, authcode)\n    this.setState({ formState: \"signIn\" })\n  }\n  signIn = async form => {\n    const { username, password } = form\n\n    // step 3: Sign in the new user\n    await Auth.signIn(username, password)\n    // step 4: Check to see if the user is an Admin, if so, show the inventory view.\n    const user = await Auth.currentAuthenticatedUser()\n    const {\n      signInUserSession: {\n        idToken: { payload },\n      },\n    } = user\n\n    console.log(\"user\", user)\n\n    const isAdmin =\n      payload[\"cognito:groups\"] && payload[\"cognito:groups\"].includes(\"admin\")\n    this.setState({ formState: \"signedIn\", isAdmin })\n  }\n  signOut = async () => {\n    // allow users to sign out\n    await Auth.signOut()\n    this.setState({ formState: \"signUp\" })\n  }\n\n  render() {\n    const { formState, isAdmin } = this.state\n    const renderForm = (formState, state) => {\n      switch (formState) {\n        case \"signUp\":\n          return (\n            <SignUp\n              {...state}\n              signUp={this.signUp}\n              toggleFormState={this.toggleFormState}\n            />\n          )\n        case \"confirmSignUp\":\n          return <ConfirmSignUp {...state} confirmSignUp={this.confirmSignUp} />\n        case \"signIn\":\n          return (\n            <SignIn\n              {...state}\n              signIn={this.signIn}\n              toggleFormState={this.toggleFormState}\n            />\n          )\n        case \"signedIn\":\n          return isAdmin ? (\n            <Inventory {...state} signOut={this.signOut} />\n          ) : (\n            <h3>Not an admin</h3>\n          )\n        default:\n          return null\n      }\n    }\n\n    return (\n      <div className=\"flex flex-col\">\n        <div className=\"max-w-fw flex flex-col\">\n          <div className=\"pt-10\">\n            <h1 className=\"text-5xl font-light\">Admin Panel</h1>\n          </div>\n          {renderForm(formState)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Admin\n"],"sourceRoot":""}